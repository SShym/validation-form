{"version":3,"sources":["img/mail.svg","img/password.svg","App.js","reportWebVitals.js","index.js"],"names":["LoginSchema","Yup","shape","email","required","className","password","min","App","initialValues","validationSchema","touched","isSubmitting","errors","values","htmlFor","style","backgroundImage","mail","backgroundRepeat","backgroundPosition","test","type","name","placeholder","autocomplete","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uJAAe,MAA0B,iCCA1B,MAA0B,qC,OCOnCA,EAAcC,MAAaC,MAAM,CACrCC,MAAOF,MAAaG,SAClB,qBAAKC,UAAU,WAAf,sHACAF,MAAM,KACRG,SAAUL,MAAaG,SACrB,qBAAKC,UAAU,WAAf,sHACAE,IAAI,EAAG,4OAgIIC,EA7HH,WA+CV,OACE,8BACE,cAAC,IAAD,CACEC,cAAe,CACbN,MAAO,GACPG,SAAU,IAEZI,iBAAkBV,EALpB,SAOG,oBAAGW,EAAH,EAAGA,QAAiBC,GAApB,EAAYC,OAAZ,EAAoBD,cAAcE,EAAlC,EAAkCA,OAAlC,OAAgDF,EAsD3C,sBAAKP,UAAU,cAAf,UACA,gEACE,qBAAKA,UAAU,QAAf,qKACA,gCACE,2CAAcS,EAAOX,MAAM,0BAC3B,8CAAiBW,EAAOR,kBAzD9B,eAAC,IAAD,CAAMD,UAAU,OAAhB,UACE,oBAAIA,UAAU,UAAd,qBACA,oBAAIA,UAAU,QAAd,gCAEA,sBAAMA,UAAU,aAAhB,UACE,uBAAOA,UAAU,QAAQU,QAAQ,QAAjC,oBACA,cAAC,IAAD,CAAOC,MAAO,CACZC,gBAAgB,OAAD,OAASC,EAAT,KACfC,iBAAiB,YACjBC,mBAAmB,QAEnBf,UACEM,EAAQR,QAAW,0JAA0JkB,KAAKP,EAAOX,OACrL,kBACC,0JAA0JkB,KAAKP,EAAOX,OAAU,oBACjL,aAGNmB,KAAK,QACLC,KAAK,QACLC,YAAY,mBACZC,aAAa,QACb,qBAAKpB,UAAU,yBAAf,SACE,cAAC,IAAD,CAAckB,KAAK,eAIzB,sBAAKlB,UAAU,aAAf,UACE,uBAAOA,UAAU,QAAQU,QAAQ,WAAjC,sBACA,cAAC,IAAD,CAAOC,MAAO,CACVC,gBAAgB,OAAD,OAASX,EAAT,KACfa,iBAAiB,YACjBC,mBAAmB,QAErBf,WACE,UAAAS,EAAOR,gBAAP,eAAiBoB,SAAU,EACvB,oBACAf,EAAQL,WAAY,UAAAQ,EAAOR,gBAAP,eAAiBoB,SAAU,EAAI,kBACnD,aAENJ,KAAK,WACLC,KAAK,WACLC,YAAY,wBACd,qBAAKnB,UAAU,4BAAf,SACE,cAAC,IAAD,CAAckB,KAAK,kBAIvB,wBAAQlB,UAAU,UAAUiB,KAAK,SAAjC,8B,QC9GCK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCDdQ,EAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1Bb,K","file":"static/js/main.958ea6e4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/mail.602a9a5e.svg\";","export default __webpack_public_path__ + \"static/media/password.6bdd511b.svg\";","import './App.css';\r\nimport React from \"react\";\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport mail from '../src/img/mail.svg';\r\nimport password from '../src/img/password.svg';\r\n  \r\nconst LoginSchema = Yup.object().shape({\r\n  email: Yup.string().required(\r\n    <div className=\"required\">Обьязательное поле</div>\r\n  ).email(' '),\r\n  password: Yup.string().required(\r\n    <div className=\"required\">Обьязательное поле</div>\r\n  ).min(6, 'Пароль слишком короткий — минимум 6 символов.'),\r\n});\r\n  \r\nconst App = () => {\r\n  // //------------------Task-№1-------------------------//\r\n\r\n  // const arr = [1, 2, 3, 1, 2];\r\n  // const removeDuplicates = (arr) => arr.filter((item, index) => arr.indexOf(item) === index);\r\n  // console.log(removeDuplicates(arr))\r\n\r\n  // //------------------Task-№2-------------------------//\r\n\r\n  // const findDuplicate = (...arrays) => {\r\n  //   const result = arrays[0].filter((el) => arrays[1].indexOf(el) >= 0 && el);\r\n  //   arrays.length > 2 && findDuplicate(result, ...arrays.slice(2, arrays.length))\r\n  //   return Array.from(new Set(result));\r\n  // };\r\n\r\n  // console.log(findDuplicate([1,2], [2,3]))\r\n\r\n\r\n\r\n  // //------------------Task-№3-------------------------//\r\n\r\n  // const isEmpty = (obj) => {\r\n  //   if(typeof obj === 'boolean'){\r\n  //     return !obj;\r\n  //   }\r\n  //   else if(typeof obj === 'number'){\r\n  //     return false;\r\n  //   }\r\n  //   else if(typeof obj === 'object') {\r\n  //     return Object.keys(obj).every(x => {\r\n  //       if(['object', 'boolean', 'number'].includes(typeof obj[x])) {\r\n  //         return isEmpty(obj[x]);\r\n  //       }\r\n  //       return isEmpty(obj[x]);\r\n  //     })\r\n  //   }\r\n  //   return !obj;\r\n  // };\r\n  \r\n  // const firstTest = {};\r\n  // const secontTest = { a: { b: undefined } };\r\n  // const thirdTest = { a: { b: [] } };\r\n\r\n  // console.log(isEmpty(firstTest));\r\n  // console.log(isEmpty(secontTest));\r\n  // console.log(isEmpty(thirdTest));\r\n\r\n  return (\r\n    <div>\r\n      <Formik\r\n        initialValues={{ \r\n          email: \"\", \r\n          password: \"\" \r\n        }}\r\n        validationSchema={LoginSchema}\r\n      >\r\n        {({ touched, errors, isSubmitting, values }) => !isSubmitting \r\n         ? (\r\n            <Form className=\"form\">\r\n              <h4 className=\"welcome\">Welcome</h4>\r\n              <h2 className=\"title\">Join The Community</h2>\r\n\r\n              <div  className=\"form-group\">\r\n                <label className=\"label\" htmlFor=\"email\">E-Mail</label>\r\n                <Field style={{\r\n                  backgroundImage: `url(${mail})`,\r\n                  backgroundRepeat:'no-repeat',\r\n                  backgroundPosition:'14px',\r\n                }} \r\n                  className={\r\n                    touched.email && (!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/i.test(values.email))\r\n                      ? \"wrongInputField\"\r\n                      : (/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/i.test(values.email)) ? \"successInputField\"\r\n                      : \"inputField\"\r\n                  }\r\n                  \r\n                  type=\"email\" \r\n                  name=\"email\"\r\n                  placeholder=\"Enter your email\" \r\n                  autocomplete=\"off\" />\r\n                  <div className=\"invalid-feedback-email\">\r\n                    <ErrorMessage name=\"email\" />\r\n                  </div>\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label className=\"label\" htmlFor=\"password\">Password</label>\r\n                <Field style={{\r\n                    backgroundImage: `url(${password})`,\r\n                    backgroundRepeat:'no-repeat',\r\n                    backgroundPosition:'14px',\r\n                  }} \r\n                  className={\r\n                    values.password?.length >= 6 \r\n                      ? \"successInputField\"\r\n                      : touched.password && values.password?.length <= 6 ? \"wrongInputField\"\r\n                      : \"inputField\"\r\n                  }\r\n                  type=\"password\" \r\n                  name=\"password\" \r\n                  placeholder=\"Enter your password\" />\r\n                <div className=\"invalid-feedback-password\">\r\n                  <ErrorMessage name=\"password\"/>\r\n                </div>\r\n              </div>\r\n\r\n              <button className=\"signBtn\" type=\"submit\">Sign Up</button>\r\n            </Form>\r\n           ) \r\n           : (\r\n              <div className=\"formSuccess\">\r\n              <h1>Успех</h1>\r\n                <div className=\"thank\">Спасибо, что связались с нами! </div>\r\n                <div>\r\n                  <span>Email: {values.email}<br/></span>\r\n                  <span>Password: {values.password}</span>\r\n                  </div>\r\n              </div>\r\n            )\r\n        }\r\n      </Formik>\r\n    </div>\r\n  );\r\n}\r\n  \r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import './index.css';\r\nimport App from './App';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}